---
- name: Installing python3 on managed
  hosts: all
  gather_facts: false
  tasks:
#  - name: Checking python
#    raw: test -e /usr/bin/python3
#    changed_when: false
#    failed_when: false
#    register: check_python3
#  - name: install python3
#    when: check_python3.rc != 0
#    raw: apt update && apt install -y python3
  - name: Installing missing sudo
    package:
      name: sudo,python3
      state: present

- name: Installing unzip on centos7
  hosts: centos7
  gather_facts: false
  tasks:
  - name: Cheking unzip presence
    raw: test -e /usr/bin/unzip
    changed_when: false
    failed_when: false
    register: unzip_check
  - name: Installing unzip
    package:
      name: unzip
      state: present
    when: unzip_check.rc != 0
    

- name: Installing vector
  hosts: vector
  serial: 1
  become: true
  tasks:  
  - name: Creating vector tmp dir
    file:
      path: ./files
      state: directory
#    register: check_dir
  - name: downloading archive
    get_url:
      url: https://packages.timber.io/vector/0.23.0/vector-0.23.0-x86_64-unknown-linux-gnu.tar.gz
      dest: files/vector-0.23.0-x86_64-unknown-linux-gnu.tar.gz
 #     owner: dpopov
 #     group: dpopov
 #   delegate_to: localhost
#  - name: Creating vector tmp dir
#    file:
#      path: ./vector
#      state: directory
#    register: check_dir
#  - name: Copying vector to managed hosts
#    copy:
#      src: files/vector-0.23.0-x86_64-unknown-linux-gnu.tar.gz
#      dest: ./vector/
  - name: Uncompressing vector
    shell: gunzip -f ./files/vector-0.23.0-x86_64-unknown-linux-gnu.tar.gz

- name: Install Clickhouse
  hosts: clickhouse
  handlers:
    - name: Start clickhouse service
      become: true
      ansible.builtin.service:
        name: clickhouse-server
        state: restarted
  tasks:
    - block:
        - name: Get clickhouse distrib
          ansible.builtin.get_url:
            url: "https://packages.clickhouse.com/rpm/stable/{{ item }}-{{ clickhouse_version }}.noarch.rpm"
            dest: "./{{ item }}-{{ clickhouse_version }}.rpm"
          with_items: "{{ clickhouse_packages }}"
      rescue:
        - name: Get clickhouse distrib
          ansible.builtin.get_url:
            url: "https://packages.clickhouse.com/rpm/stable/clickhouse-common-static-{{ clickhouse_version }}.x86_64.rpm"
            dest: "./clickhouse-common-static-{{ clickhouse_version }}.rpm"
    - name: Install clickhouse packages
      become: true
      ansible.builtin.yum:
        name:
          - clickhouse-common-static-{{ clickhouse_version }}.rpm
          - clickhouse-client-{{ clickhouse_version }}.rpm
          - clickhouse-server-{{ clickhouse_version }}.rpm
      notify: Start clickhouse service
    - name: Create database
      ansible.builtin.command: "clickhouse-client -q 'create database logs;'"
      register: create_db
      failed_when: create_db.rc != 0 and create_db.rc !=82
      changed_when: create_db.rc == 0
